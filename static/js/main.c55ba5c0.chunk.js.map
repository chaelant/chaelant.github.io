{"version":3,"sources":["components/Projects.js","components/About.js","components/Education.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Projects","react_default","a","createElement","className","href","target","rel","React","Component","About","Education","Contact","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","about","project","education","contact","setState","viewData","_this2","About_About","Projects_Projects","Education_Education","Contact_Contact","type","disabled","onClick","aboutView","projectView","educationView","contactView","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c55ba5c0.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Projects extends React.Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <a href=\"https://chaelant.github.io/ArcticFox\" target='_blank' rel=\"noopener noreferrer\" className=\"btn btn-link\">tcg collection app</a>\n                    <p>a full-stack mobile application built with react native to manage a collection of trading cards</p>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\n\nexport default class About extends React.Component {\n    render() {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <p>hey, there. i'm michael and i'm a full-stack web developer, database junkie, and avid pokémon connoisseur. i've been developing solo since 2018 and i'm always looking to work on new projects and expand my knowledge!</p>\n                </div>\n                <div className=\"row\">\n                    <p>got something you want to collab on? let's connect!</p>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\n\nexport default class Education extends React.Component {\n    render() {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h3>steven's institute of technology</h3>\n                        <h5>master of science - computer science</h5>\n                        <p>may 2019</p>\n                    </div>\n                </div>\n                <hr/>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h3>montclair state university</h3>\n                        <h5>graduate certificate - computational linguistics</h5>\n                        <p>may 2016</p>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h5>bachelor of arts - linguistics</h5>\n                        <p>august 2015</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\n\nexport default class Contact extends React.Component {\n    render() {\n        return(\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <a href='mailto:mikeramos92@gmail.com' target=\"_top\">email</a>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <a href='https://linkedin.com/in/michaelramos92' target=\"_blank\" rel=\"noopener noreferrer\">linkedin</a>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <a href='https://github.com/chaelant' target=\"_blank\" rel=\"noopener noreferrer\">github</a>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport Projects from './components/Projects';\nimport About from './components/About';\nimport Education from './components/Education';\nimport Contact from './components/Contact';\nimport './App.css';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            about: true,\n            project: false,\n            education: false,\n            contact: false\n        }\n    }\n\n    aboutView() {\n        if (this.state.about) {\n            this.setState({\n                about:false\n            })\n        } else {\n            this.setState({\n                about: true,\n                project: false,\n                education: false,\n                contact: false\n            })\n        }\n    }\n\n    projectView() {\n        if (this.state.project) {\n            this.setState({\n                project:false\n            })\n        } else {\n            this.setState({\n                about: false,\n                project: true,\n                education: false,\n                contact: false\n            })\n        }\n    }\n\n    educationView() {\n        if (this.state.education) {\n            this.setState({\n                education:false\n            })\n        } else {\n            this.setState({\n                about: false,\n                project: false,\n                education: true,\n                contact: false\n            })\n        }\n    }\n\n    contactView() {\n        if (this.state.contact) {\n            this.setState({\n                contact:false\n            })\n        } else {\n            this.setState({\n                about: false,\n                project: false,\n                education: false,\n                contact: true\n            })\n        }\n    }\n\n    render () {\n        let viewData;\n\n        if (this.state.about) {\n            viewData = <About/>\n        } else if (this.state.project) {\n            viewData = <Projects/>\n        } else if (this.state.education) {\n            viewData = <Education/>\n        } else if (this.state.contact) {\n            viewData = <Contact/>\n        }\n\n        return (\n            <div className=\"container\">\n                <div className=\"jumbotron jumbotron-title\"/>\n                <div className=\"jumbotron jumbotron-title\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <h1 className=\"title text-center\">michael ramos</h1>\n                                <p className=\"title text-center\">developer. creative. pokémon master.</p>\n                            </div>\n                        </div>\n                        <div className=\"row justify-content-center\">\n                            <button type=\"button\" className=\"btn btn-link\" disabled={this.state.about} onClick={() => this.aboutView()}>about</button>\n                            <button type=\"button\" className=\"btn btn-link\" disabled={this.state.project} onClick={() => this.projectView()}>projects</button>\n                            <button type=\"button\" className=\"btn btn-link\" disabled={this.state.education} onClick={() => this.educationView()}>education</button>\n                            <button type=\"button\" className=\"btn btn-link\" disabled={this.state.contact} onClick={() => this.contactView()}>contact</button>\n                        </div>\n                    </div>\n                </div>\n                {viewData}\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// assets are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './custom.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}